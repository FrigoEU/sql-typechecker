import { CastType, ScalarT } from "./typecheck";

export const builtincasts: {
  source: ScalarT;
  target: ScalarT;
  type: CastType;
}[] = [
  { source: "bigint", target: "bit", type: "no" },
  { source: "bigint", target: "double precision", type: "yes" },
  { source: "bigint", target: "integer", type: "in assignment" },
  { source: "bigint", target: "money", type: "in assignment" },
  { source: "bigint", target: "numeric", type: "yes" },
  { source: "bigint", target: "oid", type: "yes" },
  { source: "bigint", target: "real", type: "yes" },
  { source: "bigint", target: "regclass", type: "yes" },
  { source: "bigint", target: "regconfig", type: "yes" },
  { source: "bigint", target: "regdictionary", type: "yes" },
  { source: "bigint", target: "regnamespace", type: "yes" },
  { source: "bigint", target: "regoper", type: "yes" },
  { source: "bigint", target: "regoperator", type: "yes" },
  { source: "bigint", target: "regproc", type: "yes" },
  { source: "bigint", target: "regprocedure", type: "yes" },
  { source: "bigint", target: "regrole", type: "yes" },
  { source: "bigint", target: "regtype", type: "yes" },
  { source: "bigint", target: "smallint", type: "in assignment" },
  { source: "bit", target: "bigint", type: "no" },
  { source: "bit", target: "bit", type: "yes" },
  { source: "bit", target: "bit varying", type: "yes" },
  { source: "bit", target: "integer", type: "no" },
  { source: "bit varying", target: "bit", type: "yes" },
  { source: "bit varying", target: "bit varying", type: "yes" },
  { source: "boolean", target: "character", type: "in assignment" },
  { source: "boolean", target: "character varying", type: "in assignment" },
  { source: "boolean", target: "integer", type: "no" },
  { source: "boolean", target: "text", type: "in assignment" },
  { source: "box", target: "circle", type: "no" },
  { source: "box", target: "lseg", type: "no" },
  { source: "box", target: "point", type: "no" },
  { source: "box", target: "polygon", type: "in assignment" },
  { source: "char", target: "character", type: "in assignment" },
  { source: "char", target: "character varying", type: "in assignment" },
  { source: "char", target: "integer", type: "no" },
  { source: "char", target: "text", type: "yes" },
  { source: "character", target: "char", type: "in assignment" },
  { source: "character", target: "character", type: "yes" },
  { source: "character", target: "character varying", type: "yes" },
  { source: "character", target: "name", type: "yes" },
  { source: "character", target: "text", type: "yes" },
  { source: "character", target: "xml", type: "no" },
  { source: "character varying", target: "char", type: "in assignment" },
  { source: "character varying", target: "character", type: "yes" },
  { source: "character varying", target: "character varying", type: "yes" },
  { source: "character varying", target: "name", type: "yes" },
  { source: "character varying", target: "regclass", type: "yes" },
  { source: "character varying", target: "text", type: "yes" },
  { source: "character varying", target: "xml", type: "no" },
  { source: "cidr", target: "character", type: "in assignment" },
  { source: "cidr", target: "character varying", type: "in assignment" },
  { source: "cidr", target: "inet", type: "yes" },
  { source: "cidr", target: "text", type: "in assignment" },
  { source: "circle", target: "box", type: "no" },
  { source: "circle", target: "point", type: "no" },
  { source: "circle", target: "polygon", type: "no" },
  { source: "date", target: "timestamp without time zone", type: "yes" },
  { source: "date", target: "timestamp with time zone", type: "yes" },
  { source: "double precision", target: "bigint", type: "in assignment" },
  { source: "double precision", target: "integer", type: "in assignment" },
  { source: "double precision", target: "numeric", type: "in assignment" },
  { source: "double precision", target: "real", type: "in assignment" },
  { source: "double precision", target: "smallint", type: "in assignment" },
  { source: "inet", target: "character", type: "in assignment" },
  { source: "inet", target: "character varying", type: "in assignment" },
  { source: "inet", target: "cidr", type: "in assignment" },
  { source: "inet", target: "text", type: "in assignment" },
  { source: "integer", target: "bigint", type: "yes" },
  { source: "integer", target: "bit", type: "no" },
  { source: "integer", target: "boolean", type: "no" },
  { source: "integer", target: "char", type: "no" },
  { source: "integer", target: "double precision", type: "yes" },
  { source: "integer", target: "money", type: "in assignment" },
  { source: "integer", target: "numeric", type: "yes" },
  { source: "integer", target: "oid", type: "yes" },
  { source: "integer", target: "real", type: "yes" },
  { source: "integer", target: "regclass", type: "yes" },
  { source: "integer", target: "regconfig", type: "yes" },
  { source: "integer", target: "regdictionary", type: "yes" },
  { source: "integer", target: "regnamespace", type: "yes" },
  { source: "integer", target: "regoper", type: "yes" },
  { source: "integer", target: "regoperator", type: "yes" },
  { source: "integer", target: "regproc", type: "yes" },
  { source: "integer", target: "regprocedure", type: "yes" },
  { source: "integer", target: "regrole", type: "yes" },
  { source: "integer", target: "regtype", type: "yes" },
  { source: "integer", target: "smallint", type: "in assignment" },
  { source: "interval", target: "interval", type: "yes" },
  {
    source: "interval",
    target: "time without time zone",
    type: "in assignment",
  },
  { source: "json", target: "jsonb", type: "in assignment" },
  { source: "jsonb", target: "bigint", type: "no" },
  { source: "jsonb", target: "boolean", type: "no" },
  { source: "jsonb", target: "double precision", type: "no" },
  { source: "jsonb", target: "integer", type: "no" },
  { source: "jsonb", target: "json", type: "in assignment" },
  { source: "jsonb", target: "numeric", type: "no" },
  { source: "jsonb", target: "real", type: "no" },
  { source: "jsonb", target: "smallint", type: "no" },
  { source: "lseg", target: "point", type: "no" },
  { source: "macaddr", target: "macaddr8", type: "yes" },
  { source: "macaddr8", target: "macaddr", type: "yes" },
  { source: "money", target: "numeric", type: "in assignment" },
  { source: "name", target: "character", type: "in assignment" },
  { source: "name", target: "character varying", type: "in assignment" },
  { source: "name", target: "text", type: "yes" },
  { source: "numeric", target: "bigint", type: "in assignment" },
  { source: "numeric", target: "double precision", type: "yes" },
  { source: "numeric", target: "integer", type: "in assignment" },
  { source: "numeric", target: "money", type: "in assignment" },
  { source: "numeric", target: "numeric", type: "yes" },
  { source: "numeric", target: "real", type: "yes" },
  { source: "numeric", target: "smallint", type: "in assignment" },
  { source: "oid", target: "bigint", type: "in assignment" },
  { source: "oid", target: "integer", type: "in assignment" },
  { source: "oid", target: "regclass", type: "yes" },
  { source: "oid", target: "regconfig", type: "yes" },
  { source: "oid", target: "regdictionary", type: "yes" },
  { source: "oid", target: "regnamespace", type: "yes" },
  { source: "oid", target: "regoper", type: "yes" },
  { source: "oid", target: "regoperator", type: "yes" },
  { source: "oid", target: "regproc", type: "yes" },
  { source: "oid", target: "regprocedure", type: "yes" },
  { source: "oid", target: "regrole", type: "yes" },
  { source: "oid", target: "regtype", type: "yes" },
  { source: "path", target: "point", type: "no" },
  { source: "path", target: "polygon", type: "in assignment" },
  { source: "pg_dependencies", target: "bytea", type: "yes" },
  { source: "pg_dependencies", target: "text", type: "yes" },
  { source: "pg_mcv_list", target: "bytea", type: "yes" },
  { source: "pg_mcv_list", target: "text", type: "yes" },
  { source: "pg_ndistinct", target: "bytea", type: "yes" },
  { source: "pg_ndistinct", target: "text", type: "yes" },
  { source: "pg_node_tree", target: "text", type: "yes" },
  { source: "point", target: "box", type: "in assignment" },
  { source: "polygon", target: "box", type: "no" },
  { source: "polygon", target: "circle", type: "no" },
  { source: "polygon", target: "path", type: "in assignment" },
  { source: "polygon", target: "point", type: "no" },
  { source: "real", target: "bigint", type: "in assignment" },
  { source: "real", target: "double precision", type: "yes" },
  { source: "real", target: "integer", type: "in assignment" },
  { source: "real", target: "numeric", type: "in assignment" },
  { source: "real", target: "smallint", type: "in assignment" },
  { source: "regclass", target: "bigint", type: "in assignment" },
  { source: "regclass", target: "integer", type: "in assignment" },
  { source: "regclass", target: "oid", type: "yes" },
  { source: "regconfig", target: "bigint", type: "in assignment" },
  { source: "regconfig", target: "integer", type: "in assignment" },
  { source: "regconfig", target: "oid", type: "yes" },
  { source: "regdictionary", target: "bigint", type: "in assignment" },
  { source: "regdictionary", target: "integer", type: "in assignment" },
  { source: "regdictionary", target: "oid", type: "yes" },
  { source: "regnamespace", target: "bigint", type: "in assignment" },
  { source: "regnamespace", target: "integer", type: "in assignment" },
  { source: "regnamespace", target: "oid", type: "yes" },
  { source: "regoper", target: "bigint", type: "in assignment" },
  { source: "regoper", target: "integer", type: "in assignment" },
  { source: "regoper", target: "oid", type: "yes" },
  { source: "regoper", target: "regoperator", type: "yes" },
  { source: "regoperator", target: "bigint", type: "in assignment" },
  { source: "regoperator", target: "integer", type: "in assignment" },
  { source: "regoperator", target: "oid", type: "yes" },
  { source: "regoperator", target: "regoper", type: "yes" },
  { source: "regproc", target: "bigint", type: "in assignment" },
  { source: "regproc", target: "integer", type: "in assignment" },
  { source: "regproc", target: "oid", type: "yes" },
  { source: "regproc", target: "regprocedure", type: "yes" },
  { source: "regprocedure", target: "bigint", type: "in assignment" },
  { source: "regprocedure", target: "integer", type: "in assignment" },
  { source: "regprocedure", target: "oid", type: "yes" },
  { source: "regprocedure", target: "regproc", type: "yes" },
  { source: "regrole", target: "bigint", type: "in assignment" },
  { source: "regrole", target: "integer", type: "in assignment" },
  { source: "regrole", target: "oid", type: "yes" },
  { source: "regtype", target: "bigint", type: "in assignment" },
  { source: "regtype", target: "integer", type: "in assignment" },
  { source: "regtype", target: "oid", type: "yes" },
  { source: "smallint", target: "bigint", type: "yes" },
  { source: "smallint", target: "double precision", type: "yes" },
  { source: "smallint", target: "integer", type: "yes" },
  { source: "smallint", target: "numeric", type: "yes" },
  { source: "smallint", target: "oid", type: "yes" },
  { source: "smallint", target: "real", type: "yes" },
  { source: "smallint", target: "regclass", type: "yes" },
  { source: "smallint", target: "regconfig", type: "yes" },
  { source: "smallint", target: "regdictionary", type: "yes" },
  { source: "smallint", target: "regnamespace", type: "yes" },
  { source: "smallint", target: "regoper", type: "yes" },
  { source: "smallint", target: "regoperator", type: "yes" },
  { source: "smallint", target: "regproc", type: "yes" },
  { source: "smallint", target: "regprocedure", type: "yes" },
  { source: "smallint", target: "regrole", type: "yes" },
  { source: "smallint", target: "regtype", type: "yes" },
  { source: "text", target: "char", type: "in assignment" },
  { source: "text", target: "character", type: "yes" },
  { source: "text", target: "character varying", type: "yes" },
  { source: "text", target: "name", type: "yes" },
  { source: "text", target: "regclass", type: "yes" },
  { source: "text", target: "xml", type: "no" },
  {
    source: "timestamp without time zone",
    target: "date",
    type: "in assignment",
  },
  {
    source: "timestamp without time zone",
    target: "timestamp without time zone",
    type: "yes",
  },
  {
    source: "timestamp without time zone",
    target: "timestamp with time zone",
    type: "yes",
  },
  {
    source: "timestamp without time zone",
    target: "time without time zone",
    type: "in assignment",
  },
  { source: "timestamp with time zone", target: "date", type: "in assignment" },
  {
    source: "timestamp with time zone",
    target: "timestamp without time zone",
    type: "in assignment",
  },
  {
    source: "timestamp with time zone",
    target: "timestamp with time zone",
    type: "yes",
  },
  {
    source: "timestamp with time zone",
    target: "time without time zone",
    type: "in assignment",
  },
  {
    source: "timestamp with time zone",
    target: "time with time zone",
    type: "in assignment",
  },
  { source: "time without time zone", target: "interval", type: "yes" },
  {
    source: "time without time zone",
    target: "time without time zone",
    type: "yes",
  },
  {
    source: "time without time zone",
    target: "time with time zone",
    type: "yes",
  },
  {
    source: "time with time zone",
    target: "time without time zone",
    type: "in assignment",
  },
  { source: "time with time zone", target: "time with time zone", type: "yes" },
  { source: "xml", target: "character", type: "in assignment" },
  { source: "xml", target: "character varying", type: "in assignment" },
  { source: "xml", target: "text", type: "in assignment" },
].map((s) => ({
  source: { kind: "scalar", name: { name: s.source } },
  target: { kind: "scalar", name: { name: s.target } },
  type:
    s.type === "no" ? "explicit" : s.type === "yes" ? "implicit" : "assignment",
}));
